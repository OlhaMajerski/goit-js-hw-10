{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["/* import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport iconClose from '../img/alert-icon.svg';\n\nconst timeInput = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nstartBtn.disabled = true;\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        titleColor: '#ffffff',\n        titleSize: '16',\n        messageColor: '#ffffff',\n        class: 'resolved-promise',\n        backgroundColor: '#b51b1b',\n\n        iconUrl: iconClose,\n        position: 'topRight',\n        theme: 'dark',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr(timeInput, options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  timeInput.disabled = true;\n\n  setTimeout(() => {\n    clearInterval(intervalId);\n    timeInput.disabled = false;\n  }, userSelectedDate - Date.now());\n\n  const intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    const diff = userSelectedDate - currentTime;\n    const objTime = convertMs(diff);\n\n    function convertMs(ms) {\n      // Number of milliseconds per unit of time\n      const second = 1000;\n      const minute = second * 60;\n      const hour = minute * 60;\n      const day = hour * 24;\n\n      // Remaining days\n      const days = Math.floor(ms / day);\n      // Remaining hours\n      const hours = Math.floor((ms % day) / hour);\n      // Remaining minutes\n      const minutes = Math.floor(((ms % day) % hour) / minute);\n      // Remaining seconds\n      const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n      return { days, hours, minutes, seconds };\n    }\n\n    days.textContent = objTime.days.toString().padStart(2, '0');\n    hours.textContent = objTime.hours.toString().padStart(2, '0');\n    minutes.textContent = objTime.minutes.toString().padStart(2, '0');\n    seconds.textContent = objTime.seconds.toString().padStart(2, '0');\n  }, 1000);\n}); */\n\n/*\n */\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst timeInput = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nstartBtn.disabled = true;\nstartBtn.classList.add('disabled');\n\nlet userSelectedDate;\nlet intervalId;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        titleColor: '#ffffff',\n        titleSize: '16',\n        messageColor: '#ffffff',\n        class: 'resolved-promise',\n        backgroundColor: '#b51b1b',\n        iconUrl: iconClose,\n        position: 'topRight',\n        theme: 'dark',\n      });\n      startBtn.disabled = true;\n      startBtn.classList.add('disabled');\n    } else {\n      startBtn.disabled = false;\n      startBtn.classList.remove('disabled');\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\nflatpickr(timeInput, options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  startBtn.classList.add('disabled');\n  timeInput.disabled = true;\n\n  intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    const diff = userSelectedDate - currentTime;\n\n    if (diff <= 0) {\n      clearInterval(intervalId);\n      timeInput.disabled = false;\n      updateTimerUI(0, 0, 0, 0);\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(diff);\n    updateTimerUI(days, hours, minutes, seconds);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerUI(days, hours, minutes, seconds) {\n  daysEl.textContent = String(days).padStart(2, '0');\n  hoursEl.textContent = String(hours).padStart(2, '0');\n  minutesEl.textContent = String(minutes).padStart(2, '0');\n  secondsEl.textContent = String(seconds).padStart(2, '0');\n}\n\nconst style = document.createElement('style');\nstyle.innerHTML = `\n  .disabled {\n    background-color: #cfcfcf;\n    color: #989898;\n    cursor: not-allowed;\n  }\n  button[data-start]:not(.disabled) {\n    background-color: #4e75ff;\n    color: #fff;\n    cursor: pointer;\n  }\n`;\ndocument.head.appendChild(style);\n"],"names":["timeInput","startBtn","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","intervalId","options","selectedDates","iziToast","flatpickr","currentTime","diff","updateTimerUI","days","hours","minutes","seconds","convertMs","ms","style"],"mappings":"+IAiGA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDJ,EAAS,SAAW,GACpBA,EAAS,UAAU,IAAI,UAAU,EAEjC,IAAIK,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,KAAK,IAAG,GAC7BC,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,qCACT,WAAY,UACZ,UAAW,KACX,aAAc,UACd,MAAO,mBACP,gBAAiB,UACjB,QAAS,UACT,SAAU,WACV,MAAO,MACf,CAAO,EACDT,EAAS,SAAW,GACpBA,EAAS,UAAU,IAAI,UAAU,IAEjCA,EAAS,SAAW,GACpBA,EAAS,UAAU,OAAO,UAAU,EACpCK,EAAmBG,EAAc,CAAC,EAErC,CACH,EAEAE,EAAUX,EAAWQ,CAAO,EAE5BP,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBA,EAAS,UAAU,IAAI,UAAU,EACjCD,EAAU,SAAW,GAErBO,EAAa,YAAY,IAAM,CAC7B,MAAMK,EAAc,KAAK,MACnBC,EAAOP,EAAmBM,EAEhC,GAAIC,GAAQ,EAAG,CACb,cAAcN,CAAU,EACxBP,EAAU,SAAW,GACrBc,EAAc,EAAG,EAAG,EAAG,CAAC,EACxB,MACD,CAED,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAI,EACxDC,EAAcC,EAAMC,EAAOC,EAASC,CAAO,CAC5C,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASJ,EAAcC,EAAMC,EAAOC,EAASC,EAAS,CACpDhB,EAAO,YAAc,OAAOa,CAAI,EAAE,SAAS,EAAG,GAAG,EACjDZ,EAAQ,YAAc,OAAOa,CAAK,EAAE,SAAS,EAAG,GAAG,EACnDZ,EAAU,YAAc,OAAOa,CAAO,EAAE,SAAS,EAAG,GAAG,EACvDZ,EAAU,YAAc,OAAOa,CAAO,EAAE,SAAS,EAAG,GAAG,CACzD,CAEA,MAAMG,EAAQ,SAAS,cAAc,OAAO,EAC5CA,EAAM,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYlB,SAAS,KAAK,YAAYA,CAAK"}